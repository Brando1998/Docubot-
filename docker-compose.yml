services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: docubot-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-abcd1234}
      - POSTGRES_DB=${POSTGRES_DB:-docubot_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-docubot_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: docubot-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGO_DB:-docubot}
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Rasa Bot
  rasa:
    build:
      context: ./rasa-bot
      dockerfile: ../docker/rasa.Dockerfile
    container_name: docubot-rasa
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    ports:
      - "5005:5005"
      - "5055:5055"  # Action server
    volumes:
      - ./rasa-bot:/app
      - rasa_models:/app/models
    environment:
      - RASA_MODEL_SERVER=http://localhost:5005
      - ACTION_ENDPOINT_URL=http://localhost:5055/webhook
    restart: unless-stopped
    command: >
      bash -c "
        rasa run actions --port 5055 --debug &
        rasa run --enable-api --cors '*' --port 5005 --debug
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Playwright Bot
  playwright:
    build:
      context: ./playwright-bot
      dockerfile: ../docker/playwright.Dockerfile
    container_name: docubot-playwright
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3001/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Vue.js Dashboard
  vue:
    build:
      context: ./vue-dashboard
      dockerfile: ../docker/vue.Dockerfile
    container_name: docubot-vue
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - VUE_APP_API_URL=http://api:8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # API Backend (Go)
  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    container_name: docubot-api
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      rasa:
        condition: service_healthy
      playwright:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - GIN_MODE=${GIN_MODE:-debug}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-abcd1234}
      - POSTGRES_DB=${POSTGRES_DB:-docubot_db}
      - MONGO_URI=mongodb://${MONGO_USER:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/${MONGO_DB:-docubot}?authSource=admin
      - MONGO_DB=${MONGO_DB:-docubot}
      - PASETO_SECRET_KEY=${PASETO_SECRET_KEY:-y7F3q9tPwXkRzZbLmNvQ2s5VpJ8HxYr4}
      - RASA_URL=http://rasa:5005
      - PLAYWRIGHT_URL=http://playwright:3001
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Baileys WhatsApp
  baileys:
    build:
      context: ./baileys-ws
      dockerfile: ../docker/baileys.Dockerfile
    container_name: docubot-baileys
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./baileys-ws:/app
      - /app/node_modules
      - baileys_auth:/app/auth
      - baileys_sessions:/app/src/sessions
    environment:
      - NODE_ENV=production
      - API_URL=http://api:8080
      - WS_PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 45s

volumes:
  postgres_data:
  mongo_data:
  rasa_models:
  baileys_auth:
  baileys_sessions:

networks:
  default:
    name: docubot-network